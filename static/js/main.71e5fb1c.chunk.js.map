{"version":3,"sources":["assets/logo.png","components/Header.js","assets/back-arrow.svg","helpers/time.js","components/TypeTag.js","components/EventTime.js","assets/defaultpic.png","components/Speaker.js","components/Sidebar.js","components/EventCard.js","components/EventList.js","helpers/fetchEvents.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","src","vhh","alt","getTime","unixTimestampSecs","d","Date","minutes","getMinutes","getHours","getDate","getMonth","getFullYear","TypeTag","type","size","EventTime","event","starttime","endtime","Speaker","name","pic","picURL","defaultpic","Sidebar","isOpen","close","sidebarVisibility","arrow","onClick","eventtype","host","hostpic","description","location","EventCard","setActiveEvent","EventList","useState","events","setEvents","useEffect","fetch","then","res","json","data","rows","feed","entry","row","formattedRow","key","startsWith","replace","$t","push","sort","a","b","response","map","App","activeEvent","sidebarOpen","setSidebarOpen","initialLoad","useRef","current","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71e5fb1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2e41a574.png\";","import React from \"react\";\r\nimport \"../styles/header.css\";\r\nimport vhh from \"../assets/logo.png\";\r\n\r\nfunction Header(){\r\n  return(\r\n    <div className=\"header-container\">\r\n      <a href=\"https://vhhacks.ca/\">\r\n        <img src={vhh} alt=\"vhHacks logo\" className=\"logo-image\"/>\r\n      </a>\r\n      <h1>vhHacks 2021</h1>  \r\n      <h3 className=\"subtitle\">live schedule</h3> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/back-arrow.383b74d2.svg\";","//returns time of event\r\nexport function getTime(unixTimestampSecs){\r\n  const unixTimestampMillis = unixTimestampSecs * 1000;\r\n  let d = new Date(unixTimestampMillis);\r\n  let minutes = (d.getMinutes() === 0) ? \r\n                \"00\" : d.getMinutes();\r\n  return d.getHours() + ':' + minutes;\r\n}\r\n\r\n//returns date of event\r\nexport function getDate(unixTimestampSecs){\r\n  const unixTimestampMillis = unixTimestampSecs * 1000;\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  let d = new Date(unixTimestampMillis);\r\n  return months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear();\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/typetag.css\";\r\n\r\nfunction TypeTag({type, size}){\r\n  return(\r\n    <div className={\"type-tag \" + type + \" \" + size}>\r\n      {type}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TypeTag;","import React from \"react\";\r\nimport {getTime} from \"../helpers/time.js\";\r\nimport \"../styles/eventtime.css\";\r\n\r\nexport default function EventTime({event, size}){\r\n  return(\r\n    <div>\r\n      <h2 className={\"event-time \" + \"et-\" + size}>{getTime(event.starttime)}\r\n          {event.endtime && (\" - \" + getTime(event.endtime))}</h2>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/defaultpic.67bc13d7.png\";","import React from \"react\";\r\nimport \"../styles/speaker.css\";\r\nimport defaultpic from \"../assets/defaultpic.png\";\r\n\r\nfunction Speaker({name, pic}){\r\n  let picURL = defaultpic;\r\n  if(pic){\r\n    picURL = pic;\r\n  }\r\n\r\n  return(\r\n    <div className=\"horizontal-container\">\r\n      <img src={picURL} className=\"speaker-pic\"/>\r\n      <p className=\"speaker-name\">{name}</p>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Speaker;\r\n","import React from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport arrow from \"../assets/back-arrow.svg\";\r\nimport {getDate} from \"../helpers/time.js\";\r\nimport TypeTag from \"./TypeTag\";\r\nimport EventTime from \"./EventTime\";\r\nimport Speaker from \"./Speaker\";\r\n\r\nexport default function Sidebar({isOpen, event, close}){\r\n  const sidebarVisibility = (isOpen) ? \"sidebar-active\" : \"sidebar-inactive\";\r\n\r\n  return(\r\n    <div className={sidebarVisibility + \" sidebar\"}>\r\n      <img src={arrow} alt=\"back\" className=\"back-arrow-image\" onClick={close}/>\r\n      <h1 className=\"sidebar-event-name\">{event.name}</h1>\r\n      <h2 className=\"sidebar-event-date\">{getDate(event.starttime)}</h2>\r\n      <EventTime className=\"sidebar-event-time\" event={event} size=\"large\"/>\r\n      <TypeTag type={event.eventtype} size=\"large-tt\"/>\r\n      \r\n      {event.host && \r\n      <div>\r\n        <h3 className=\"sidebar-header\">Host</h3>\r\n          <Speaker name={event.host} pic={event.hostpic}/>\r\n      </div>}\r\n\r\n      <h3 className=\"sidebar-header\">Description</h3>\r\n      <p className=\"description-body\">{event.description}\r\n      {event.description && <br />}\r\n      {\"Join us in \" + event.location + \" of the vhHacks Virtual Venue to participate.\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/eventcard.css\";\r\nimport TypeTag from \"./TypeTag\";\r\nimport EventTime from \"./EventTime\";\r\n\r\nexport default function EventCard({event, setActiveEvent}){\r\n  return(\r\n    <div className={\"card \" + event.eventtype + \"-card\"}\r\n         onClick={() => setActiveEvent(event)}>\r\n    <h3 className={\"event-name\"}> {event.name} </h3>\r\n    <EventTime event={event} size={\"small\"}/>\r\n    <TypeTag type={event.eventtype} size=\"small-tt\"/>\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {fetchEvents} from \"../helpers/fetchEvents.js\";\r\nimport EventCard from \"./EventCard.js\";\r\n\r\nexport default function EventList({setActiveEvent}){\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchEvents().then(response => setEvents(response)); \r\n  }, []);\r\n  \r\n  return(\r\n    <div>\r\n      {events.map((event) => (\r\n          <EventCard \r\n            event={event} \r\n            setActiveEvent={setActiveEvent}/>)\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n","// google sheets api formatting function from https://benborgers.com/posts/google-sheets-json\r\n\r\nexport function fetchEvents() {\r\n  return fetch(\"https://spreadsheets.google.com/feeds/list/1prC0JJpl7fpFOkaEUGu0vDXPVB8A6c4UIJmKNExd0yY/1/public/values?alt=json\")\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      const data = []; \r\n      const rows = json.feed.entry;\r\n\r\n      for(const row of rows) {\r\n        const formattedRow = {};\r\n\r\n        for(const key in row) {\r\n          if(key.startsWith(\"gsx$\")) {\r\n            formattedRow[key.replace(\"gsx$\", \"\")] = row[key].$t;\r\n          }\r\n        }\r\n        data.push(formattedRow);\r\n      }\r\n\r\n      let sortedEvents = data.sort(\r\n        (a, b) => a.starttime - b.starttime\r\n      );\r\n      return sortedEvents; \r\n  })\r\n}","import './App.css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport EventList from \"./components/EventList\";\r\n\r\nexport default function App(){\r\n  const [activeEvent, setActiveEvent] = useState({});\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const initialLoad = useRef(false);\r\n\r\n  \r\n  useEffect(()=> {if(initialLoad.current) setSidebarOpen(true)}, [activeEvent]);\r\n  useEffect(()=>{initialLoad.current = true}, []);\r\n\r\n  return(\r\n    <div className={sidebarOpen ? \r\n                    \"left-shift main-container\" : \r\n                    \"main-container\"}> \r\n      <Header />\r\n      <Sidebar\r\n        isOpen={sidebarOpen}\r\n        event={activeEvent}\r\n        close={() => setSidebarOpen(false)}\r\n      /> \r\n      <EventList setActiveEvent={setActiveEvent}/>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}