{"version":3,"sources":["assets/logo.svg","components/Header.js","assets/back-arrow.svg","components/TypeTag.js","assets/defaultpic.svg","components/Speaker.js","components/RelatedEvent.js","components/Sidebar.js","components/EventCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","src","hgi","alt","getType","typeString","TypeTag","type","location","Speaker","name","pic","picURL","defaultpic","RelatedEvent","relatedEventId","events","changeEvent","thisEvent","find","e","id","onClick","getTime","unixTimestamp","d","Date","minutes","getMinutes","getHours","getDate","getMonth","getFullYear","getURL","event","permission","public_url","private_url","Sidebar","isOpen","close","sidebarVisibility","arrow","start_time","end_time","event_type","speakers","map","speaker","profile_pic","description","related_events","re","target","EventCard","update","App","props","state","activeEvent","sidebarOpen","loggedIn","this","grabEvents","fetch","then","response","json","dataIn","sortedEvents","data","sort","a","b","filter","setState","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.826cc4de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.98737b8b.svg\";","import React from \"react\";\r\nimport \"../styles/header.css\";\r\nimport hgi from \"../assets/logo.svg\";\r\n\r\nfunction Header(){\r\n  return(\r\n    <div className=\"header-container\">\r\n      <a href=\"https://hackthenorth.com/\">\r\n        <img src={hgi} alt=\"HGI logo\" className=\"logo-image\"/>\r\n      </a>\r\n      <h1>events</h1>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/back-arrow.383b74d2.svg\";","import React from \"react\";\r\nimport \"../styles/typetag.css\";\r\n\r\nfunction TypeTag({type, location}){\r\n  return(\r\n    <div className={\"type-tag \" + type + \" \" + location}>\r\n      {getType(type)}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getType(typeString){\r\n  switch (typeString) {\r\n    case \"workshop\":\r\n      return \"workshop\";\r\n    case \"activity\":\r\n      return \"activity\";\r\n    case \"tech_talk\":\r\n      return \"tech talk\";\r\n  }\r\n}\r\n\r\nexport default TypeTag;","export default __webpack_public_path__ + \"static/media/defaultpic.ab943bc3.svg\";","import React from \"react\";\r\nimport \"../styles/speaker.css\";\r\nimport defaultpic from \"../assets/defaultpic.svg\";\r\n\r\nfunction Speaker({name, pic}){\r\n  let picURL = defaultpic;\r\n  if(pic !== null){\r\n    picURL = pic;\r\n  }\r\n\r\n  return(\r\n    <div className=\"horizontal-container\">\r\n      <img src={picURL} alt=\"speaker\" className=\"speaker-pic\"/>\r\n      <p className=\"speaker-name\">{name}</p>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Speaker;\r\n","import React from \"react\";\r\nimport \"../styles/relatedevent.css\";\r\n\r\nfunction RelatedEvent({relatedEventId, events, changeEvent}){\r\n  let thisEvent = events.find(e => \r\n    e.id == relatedEventId);\r\n  \r\n  return(\r\n    <div> {thisEvent && //make sure thisEvent exists before render\r\n    <a className=\"related-event\" onClick={()=>changeEvent(thisEvent)}>\r\n      {thisEvent.name}\r\n    </a>}\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default RelatedEvent;\r\n","import React from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport arrow from \"../assets/back-arrow.svg\";\r\nimport TypeTag from \"./TypeTag\";\r\nimport Speaker from \"./Speaker\";\r\nimport RelatedEvent from \"./RelatedEvent\";\r\n\r\nfunction Sidebar({isOpen = false, event, events, changeEvent, close}){\r\n  let sidebarVisibility = (isOpen === true) ? \"sidebar\" : \"inactive\";\r\n  //let speakers;\r\n\r\n  return(\r\n    <div className={sidebarVisibility}>\r\n      <img src={arrow} alt=\"\" className=\"back-arrow-image\" onClick={close}/>\r\n      <h1 className=\"sidebar-event-name\">{event.name}</h1>\r\n      <h2 className=\"sidebar-event-date\">{getDate(event.start_time)}</h2>\r\n      <h2 className=\"sidebar-event-time\">{getTime(event.start_time)} - {getTime(event.end_time)}</h2>\r\n      <TypeTag type={event.event_type} location=\"sidebar-tt\"/>\r\n      \r\n      {event.speakers && \r\n      <div>\r\n        <h3>Speakers</h3>\r\n        {event.speakers.map((speaker) => (\r\n          <Speaker name={speaker.name}\r\n                 pic={speaker.profile_pic}/>\r\n        ))}\r\n      </div>}\r\n\r\n      <h3>Description</h3>\r\n      <p className=\"description-body\">{event.description}</p>\r\n      \r\n      {event.related_events && \r\n      <div>\r\n        <h3>Related Events</h3>\r\n        {event.related_events.map((re) => (\r\n          <RelatedEvent relatedEventId={re}\r\n                        events={events}\r\n                        changeEvent={changeEvent}/>\r\n        ))}\r\n      </div>}\r\n      \r\n      <a target=\"_blank\" href={getURL(event)} className=\"attend-button\">\r\n        <div >attend!</div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\n//returns time of event\r\nfunction getTime(unixTimestamp){\r\n  let d = new Date(unixTimestamp);\r\n  let minutes = (d.getMinutes() === 0) ? \r\n                \"00\" : d.getMinutes();\r\n  return d.getHours() + ':' + minutes;\r\n}\r\n\r\n//returns date of event\r\nfunction getDate(unixTimestamp){\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  let d = new Date(unixTimestamp);\r\n  return months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear();\r\n}\r\n\r\n//returns correct (public/private) URL for event\r\nfunction getURL(event, permission = \"public\"){\r\n  if(permission === \"public\"){\r\n    return event.public_url;\r\n  } else if (permission === \"private\"){\r\n    return event.private_url;\r\n  }\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport \"../styles/eventcard.css\";\r\nimport TypeTag from \"./TypeTag\";\r\n\r\nfunction EventCard({event, update}){\r\n  return(\r\n    <div className={\"card \" + event.event_type + \"-card\"}\r\n         onClick={update}>\r\n    <h3 className={\"event-name\"}> {event.name} </h3>\r\n    <TypeTag type={event.event_type} location=\"main-page-tt\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventCard;","import './App.css';\r\nimport React from \"react\"; \r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport EventCard from \"./components/EventCard\";\r\n\r\nclass App extends React.Component { \r\n  constructor(props) { \r\n    super(props); \r\n    this.state = {\r\n      events: [], \r\n      activeEvent: {},\r\n      sidebarOpen: false,\r\n      loggedIn: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.grabEvents();\r\n  } \r\n\r\n  componentDidUpdate(){\r\n    this.grabEvents();\r\n  }\r\n\r\n  grabEvents(){\r\n    fetch('https://api.hackthenorth.com/v3/graphql?query={ events { id name event_type permission start_time end_time description speakers { name profile_pic } public_url private_url related_events } }')\r\n        .then(response => response.json())\r\n        .then(dataIn => {\r\n          //sort by start time\r\n          let sortedEvents = dataIn.data.events.sort(\r\n            (a, b) => a.start_time - b.start_time\r\n          );\r\n\r\n          //take out private events\r\n          if(this.state.loggedIn === false){\r\n            sortedEvents = sortedEvents.filter((e)=> e.permission === \"public\");\r\n          }\r\n         \r\n          this.setState({events: sortedEvents});\r\n        });\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <div className={(this.state.sidebarOpen) ? \r\n                      \"left-shift main-container\" : \r\n                      \"main-container\"}> \r\n        <Header />\r\n        <Sidebar\r\n          isOpen={this.state.sidebarOpen}\r\n          event={this.state.activeEvent}\r\n          events={this.state.events}\r\n          changeEvent={(event) => { \r\n            this.setState({activeEvent: event})}}\r\n          close={() => { \r\n            this.setState({sidebarOpen: false})}}\r\n        />  \r\n        <div className=\"events-container\"> \r\n          {this.state.events.map((event) => (\r\n            <EventCard \r\n              event={event} \r\n              update={() => { \r\n                this.setState({activeEvent: event,\r\n                                sidebarOpen: true})\r\n              }}/>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ); \r\n  } \r\n} \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}