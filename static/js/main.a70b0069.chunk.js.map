{"version":3,"sources":["assets/logo.png","components/Header.js","assets/back-arrow.svg","helpers/time.js","components/TypeTag.js","assets/defaultpic.svg","components/Sidebar.js","components/EventCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","src","vhh","alt","getTime","unixTimestamp","d","Date","minutes","getMinutes","getHours","getDate","getMonth","getFullYear","TypeTag","type","size","Sidebar","isOpen","event","close","events","changeEvent","sidebarVisibility","startTimestamp","starttime","endTimestamp","endtime","arrow","onClick","name","eventtype","description","location","EventCard","update","App","props","state","activeEvent","sidebarOpen","loggedIn","this","grabEvents","fetch","then","res","json","data","rows","feed","entry","row","formattedRow","key","startsWith","replace","$t","push","sortedEvents","sort","a","b","setState","map","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a70b0069.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2e41a574.png\";","import React from \"react\";\r\nimport \"../styles/header.css\";\r\nimport vhh from \"../assets/logo.png\";\r\n\r\nfunction Header(){\r\n  return(\r\n    <div className=\"header-container\">\r\n      <a href=\"https://vhhacks.ca/\">\r\n        <img src={vhh} alt=\"vhHacks logo\" className=\"logo-image\"/>\r\n      </a>\r\n      <h1>vhHacks 2021</h1>  \r\n      <h3 className=\"subtitle\">live schedule</h3> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/back-arrow.383b74d2.svg\";","//returns time of event\r\nexport function getTime(unixTimestamp){\r\n  let d = new Date(unixTimestamp);\r\n  let minutes = (d.getMinutes() === 0) ? \r\n                \"00\" : d.getMinutes();\r\n  return d.getHours() + ':' + minutes;\r\n}\r\n\r\n//returns date of event\r\nexport function getDate(unixTimestamp){\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  let d = new Date(unixTimestamp);\r\n  return months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear();\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/typetag.css\";\r\n\r\nfunction TypeTag({type, size}){\r\n  return(\r\n    <div className={\"type-tag \" + type + \" \" + size}>\r\n      {type}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TypeTag;","export default __webpack_public_path__ + \"static/media/defaultpic.ab943bc3.svg\";","import React from \"react\";\r\nimport \"../styles/sidebar.css\";\r\nimport arrow from \"../assets/back-arrow.svg\";\r\nimport {getTime, getDate} from \"../helpers/time.js\";\r\nimport TypeTag from \"./TypeTag\";\r\nimport Speaker from \"./Speaker\";\r\n\r\nexport default function Sidebar({isOpen = false, event, events, changeEvent, close}){\r\n  let sidebarVisibility = (isOpen === true) ? \"sidebar\" : \"inactive\";\r\n  const startTimestamp = event.starttime * 1000;\r\n  const endTimestamp = event.endtime * 1000;\r\n\r\n  return(\r\n    <div className={sidebarVisibility}>\r\n      <img src={arrow} alt=\"\" className=\"back-arrow-image\" onClick={close}/>\r\n      <h1 className=\"sidebar-event-name\">{event.name}</h1>\r\n      <h2 className=\"sidebar-event-date\">{getDate(startTimestamp)}</h2>\r\n      <h2 className=\"sidebar-event-time\">{getTime(startTimestamp)}\r\n          {endTimestamp!=0 && (\" - \" + getTime(endTimestamp))}</h2>\r\n      <TypeTag type={event.eventtype} size=\"large-tt\"/>\r\n      \r\n      {/*{event.host && \r\n      <div>\r\n        <h3 className=\"sidebar-header\">Host</h3>\r\n          <Speaker name={event.host} pic={event.hostpic}/>\r\n      </div>}*/}\r\n\r\n      <h3 className=\"sidebar-header\">Description</h3>\r\n      <p className=\"description-body\">{event.description}\r\n      {event.description && <br />}\r\n      {\"Join us in \" + event.location + \" of the vhHacks Virtual Venue to participate.\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/eventcard.css\";\r\nimport TypeTag from \"./TypeTag\";\r\n\r\nexport default function EventCard({event, update}){\r\n  return(\r\n    <div className={\"card \" + event.eventtype + \"-card\"}\r\n         onClick={update}>\r\n    <h3 className={\"event-name\"}> {event.name} </h3>\r\n    <TypeTag type={event.eventtype} size=\"small-tt\"/>\r\n    </div>\r\n  )\r\n}","import './App.css';\r\nimport React from \"react\"; \r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport EventCard from \"./components/EventCard\";\r\n\r\nclass App extends React.Component { \r\n  constructor(props) { \r\n    super(props); \r\n    this.state = {\r\n      events: [], \r\n      activeEvent: {},\r\n      sidebarOpen: false,\r\n      loggedIn: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.grabEvents();\r\n  } \r\n\r\n  componentDidUpdate(){\r\n    this.grabEvents();\r\n  }\r\n\r\n  // template for JSON api from google sheets: https://benborgers.com/posts/google-sheets-json\r\n  grabEvents(){\r\n    fetch(\"https://spreadsheets.google.com/feeds/list/1prC0JJpl7fpFOkaEUGu0vDXPVB8A6c4UIJmKNExd0yY/1/public/values?alt=json\")\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        const data = []; \r\n        const rows = json.feed.entry;\r\n\r\n        for(const row of rows) {\r\n          const formattedRow = {};\r\n\r\n          for(const key in row) {\r\n            if(key.startsWith(\"gsx$\")) {\r\n              formattedRow[key.replace(\"gsx$\", \"\")] = row[key].$t;\r\n            }\r\n          }\r\n          data.push(formattedRow);\r\n        }\r\n        let sortedEvents = data.sort(\r\n          (a, b) => a.starttime - b.starttime\r\n        );\r\n        this.setState({events: sortedEvents}) //return data; (do this when functional component)\r\n        //console.log(this.state.events);\r\n      })\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <div className={(this.state.sidebarOpen) ? \r\n                      \"left-shift main-container\" : \r\n                      \"main-container\"}> \r\n        <Header />\r\n        <Sidebar\r\n          isOpen={this.state.sidebarOpen}\r\n          event={this.state.activeEvent}\r\n          events={this.state.events}\r\n          changeEvent={(event) => { \r\n            this.setState({activeEvent: event})}}\r\n          close={() => { \r\n            this.setState({sidebarOpen: false})}}\r\n        />  \r\n        <div className=\"events-container\"> \r\n          {this.state.events.map((event) => (\r\n            <EventCard \r\n              event={event} \r\n              update={() => { \r\n                this.setState({activeEvent: event,\r\n                                sidebarOpen: true})\r\n              }}/>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ); \r\n  } \r\n} \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}